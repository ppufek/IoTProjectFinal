{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-guard.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/http.service.ts","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/layouts/default/default.component.ts","./src/app/layouts/default/default.component.html","./src/app/layouts/default/default.module.ts","./src/app/light-measurement/light-measurement.component.ts","./src/app/light-measurement/light-measurement.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/shared.service.ts","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/sidebar/sidebar.component.ts","./src/app/shared/components/sidebar/sidebar.component.html","./src/app/shared/shared.module.ts","./src/app/shared/widgets/area/area.component.ts","./src/app/shared/widgets/area/area.component.html","./src/app/shared/widgets/cards/cards.component.ts","./src/app/shared/widgets/cards/cards.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { DefaultComponent } from './layouts/default/default.component';\r\nimport { LightMeasurementComponent } from './light-measurement/light-measurement.component';\r\nimport { AuthGuardService } from './auth-guard.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LandingComponent },\r\n  { path: 'dominik', component: LoginComponent },\r\n  {\r\n    path: 'app', component: DefaultComponent,\r\n    canActivate: [AuthGuardService],\r\n    children: [{\r\n      path: 'dashboard',\r\n      component: DashboardComponent\r\n    },\r\n    {\r\n      path: 'light-measurement',\r\n      component: LightMeasurementComponent\r\n\r\n    }]\r\n  },\r\n  {path:'**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'IoTProject';\r\n\r\n}\r\n\r\n","<div class=\"container\">\r\n\r\n</div>\r\n  <router-outlet></router-outlet>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgZorroAntdModule, NZ_I18N, en_US } from 'ng-zorro-antd';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { DefaultModule } from './layouts/default/default.module';\r\nimport { AuthGuardService } from './auth-guard.service';\r\nimport { MatDividerModule, MatToolbarModule, MatIconModule, MatListModule, MatMenuModule, MatButtonModule } from '@angular/material';\r\n\r\n\r\n\r\n\r\n\r\n\r\nregisterLocaleData(en);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    LandingComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgZorroAntdModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    DefaultModule,\r\n    MatDividerModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule, \r\n    MatListModule,\r\n    \r\n  ],\r\n  providers: [{ provide: NZ_I18N, useValue: en_US }, AuthGuardService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { SharedService } from './shared.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private sharedService:SharedService, public router: Router) {}\r\n  canActivate(): boolean {\r\n    if (!this.sharedService.isLoggedIn()) {\r\n      this.router.navigate(['dominik']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SharedService } from '../shared.service';\r\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\r\n\r\nexport interface PeriodicElement {\r\n  date: string;\r\n  value: string;\r\n  measurementUnit: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n\r\n  displayedColumns: string[] = ['date', 'value', 'measurementUnit'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  message: Map<string, string[]>\r\n  // message1: Map<string, string[]>\r\n\r\n  constructor(private sharedService: SharedService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n    this.sharedService.sharedMessage1.subscribe(message => this.message = message)\r\n\r\n    let newArray: PeriodicElement[] = []\r\n\r\n    for (let key of Array.from(this.message.keys())) {\r\n\r\n      for (let i = 0; i < this.message.get(key).length; i++) {\r\n        if (key === \"valuesTemp\") {\r\n          newArray.forEach(obj => {\r\n              obj.value = this.message.get(key)[i];\r\n          });\r\n        } else {\r\n          let modal: PeriodicElement = {\r\n            date: this.message.get(key)[i],\r\n            value: \"0\",\r\n            measurementUnit: \"C\"\r\n          };\r\n          newArray.push(modal)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.dataSource = new MatTableDataSource<PeriodicElement>(newArray);\r\n\r\n    // this.sharedService.sharedMessage2.subscribe(message => this.message1 = message)\r\n    // console.log(\"Hello from Dashb LIGHT\")\r\n    // console.log(this.message1)\r\n  }\r\n\r\n}","<div>\r\n    <app-widget-area></app-widget-area>\r\n</div>\r\n\r\n\r\n<!-- <div> \r\n    <app-light-measurement></app-light-measurement>\r\n</div> -->\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<br>\r\n\r\n<!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"20px\" class = \"stats-cards\">\r\n    <mat-card fxFlex=\"25\">\r\n        <app-widget-cards></app-widget-cards>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"25\">\r\n        <app-widget-cards></app-widget-cards>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"25\">\r\n        <app-widget-cards></app-widget-cards>\r\n    </mat-card>\r\n\r\n    <mat-card fxFlex=\"25\">\r\n        <app-widget-cards></app-widget-cards>\r\n    </mat-card>\r\n    \r\n</div> -->\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<br>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"20px\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table [dataSource]=\"dataSource\">\r\n          \r\n              <!-- Position Column -->\r\n              <ng-container matColumnDef=\"date\">\r\n                <th mat-header-cell *matHeaderCellDef> Date </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\r\n              </ng-container>\r\n          \r\n              <!-- Weight Column -->\r\n              <ng-container matColumnDef=\"value\">\r\n                <th mat-header-cell *matHeaderCellDef> Value </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n              </ng-container>\r\n          \r\n              <!-- Symbol Column -->\r\n              <ng-container matColumnDef=\"measurementUnit\">\r\n                <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.measurementUnit}} </td>\r\n              </ng-container>\r\n          \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n          \r\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n          </div>\r\n          \r\n                \r\n    </div>\r\n    </div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { IProduct } from './IProduct';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json',\r\n  }),\r\n  //responseType: 'text'\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  private REST_API_SERVER = \"/api/measurements\" //or /measurements-hardcoded\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  sendGetRequest(username, password): Observable<string> {\r\n    httpOptions.headers = httpOptions.headers.set('username', username);\r\n    httpOptions.headers = httpOptions.headers.set('password', password);\r\n    return this.httpClient.get<string>(this.REST_API_SERVER, httpOptions);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.css']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n\r\n  size = 100;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n  }\r\n\r\n}\r\n","<header>\r\n    <nav>\r\n    </nav>\r\n  </header>\r\n  <div class=\"container\">\r\n    <!-- NG-ZORRO -->\r\n      <img class = \"logo\" src = \"assets/img/RITIntelligence.svg\">\r\n    <a routerLink = \"dominik\"><nz-radio-group [(ngModel)]=\"size\"  style=\"display: flex;align-items: center;justify-content: center;height: 100%;width: 100%; margin-top: 5%;\">\r\n      <button nz-button nzType=\"primary\" [nzSize]=\"size\" nzShape=\"round\">\r\n          <i nz-icon nzType=\"home\"></i>Get Started\r\n        </button>\r\n      </nz-radio-group></a>\r\n    <!-- <app-login></app-login> -->\r\n  </div>\r\n \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-default',\r\n  templateUrl: './default.component.html',\r\n  styleUrls: ['./default.component.css']\r\n})\r\nexport class DefaultComponent implements OnInit {\r\n\r\n  sidebarOpen = true; \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openSidebarToggler(){\r\n    this.sidebarOpen = !this.sidebarOpen; \r\n  }\r\n\r\n}\r\n","<app-header (openSidebarForMe) = \"openSidebarToggler()\"></app-header>\r\n\r\n\r\n<mat-drawer-container>\r\n    <mat-drawer mode=\"side\" [opened] = \"sidebarOpen\">\r\n        <app-sidebar></app-sidebar>\r\n    </mat-drawer>\r\n\r\n    <mat-drawer-content>\r\n\r\n        <router-outlet></router-outlet>\r\n    </mat-drawer-content>\r\n</mat-drawer-container>\r\n\r\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DefaultComponent } from './default.component';\r\nimport { DashboardComponent } from 'src/app/dashboard/dashboard.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport {MatSidenavModule, MatDividerModule, MatCardModule, MatPaginatorModule, MatTableModule} from '@angular/material'; \r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DefaultComponent,\r\n    DashboardComponent,\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    SharedModule,\r\n    MatSidenavModule,\r\n    MatDividerModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatPaginatorModule,\r\n    MatTableModule\r\n  ]\r\n})\r\nexport class DefaultModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as Highcharts from 'highcharts';\r\nimport { SharedService } from '../shared.service';\r\nimport HC_exporting from 'highcharts/modules/exporting';\r\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\r\n\r\nexport interface PeriodicElement {\r\n    date: string;\r\n    value: string;\r\n    measurementUnit: string;\r\n  }\r\n\r\n@Component({\r\n  selector: 'app-light-measurement',\r\n  templateUrl: './light-measurement.component.html',\r\n  styleUrls: ['./light-measurement.component.css']\r\n})\r\nexport class LightMeasurementComponent implements OnInit {\r\n\r\n    displayedColumns: string[] = ['date', 'value', 'measurementUnit'];\r\n    dataSource = new MatTableDataSource<PeriodicElement>();\r\n  \r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  \r\n  message1: Map<string, string[]>\r\n\r\n\r\n  chartsOptions: {};\r\n  Highcharts = Highcharts;\r\n  constructor(private sharedService: SharedService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n    this.sharedService.sharedMessage2.subscribe(message => this.message1 = message)\r\n    console.log( \"ovdje\", this.message1); \r\n\r\n    let newArray: PeriodicElement[] = []\r\n\r\n    for (let key of Array.from(this.message1.keys())) {\r\n\r\n      for (let i = 0; i < this.message1.get(key).length; i++) {\r\n        if (key === \"valuesLight\") {\r\n          newArray.forEach(obj => {\r\n              obj.value = this.message1.get(key)[i];\r\n          });\r\n        } else {\r\n          let modal: PeriodicElement = {\r\n            date: this.message1.get(key)[i],\r\n            value: \"0\",\r\n            measurementUnit: \"lx\"\r\n          };\r\n          newArray.push(modal)\r\n        }\r\n      }\r\n    }\r\n    this.dataSource = new MatTableDataSource<PeriodicElement>(newArray);\r\n\r\n\r\n      this.sharedService.sharedMessage2.subscribe(measurements => {\r\n          console.log('Widget', measurements);\r\n\r\n          this.chartsOptions = {\r\n              chart: {\r\n                  type: 'area'\r\n              },\r\n              title: {\r\n                  text: 'Some random data'\r\n              },\r\n              subtitle: {\r\n                  text: 'RIT Intelligence'\r\n              },\r\n              xAxis: {\r\n                  categories: measurements.get(\"datesLight\"),\r\n                  tickmarkPlacement: 'on',\r\n                  title: {\r\n                      enabled: false\r\n                  }\r\n              },\r\n              yAxis: {\r\n                  title: {\r\n                      text: 'LUX'\r\n                  },\r\n                  labels: {\r\n                      formatter: function () {\r\n                          return Math.round(this.value).toFixed(1);\r\n                      }\r\n                  }\r\n              },\r\n              tooltip: {\r\n                  split: true,\r\n                  valueSuffix: ' phots'\r\n              },\r\n              plotOptions: {\r\n                  area: {\r\n                      stacking: 'normal',\r\n                      lineColor: '#666666',\r\n                      lineWidth: 1,\r\n                      marker: {\r\n                          lineWidth: 1,\r\n                          lineColor: '#666666'\r\n                      }\r\n                  }\r\n              },\r\n              series: [{\r\n                  name: 'Light Measurement',\r\n                  data: measurements.get(\"valuesLight\").map(i=>Math.round(Number(i)* 10)/10),\r\n              }, \r\n              ]\r\n\r\n          };\r\n\r\n      })\r\n\r\n     \r\n\r\n      HC_exporting(Highcharts);\r\n\r\n      setTimeout(() => {\r\n          window.dispatchEvent(\r\n              new Event('resize')\r\n          );\r\n      }, 300)\r\n\r\n  }\r\n}\r\n\r\n\r\n","\r\n<highcharts-chart [Highcharts]=\"Highcharts\" [options]=\"chartsOptions\"\r\n    style=\"width: 100%; height: 400px; display: block;\"></highcharts-chart>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <br>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"20px\">\r\n        <div fxFlex=\"100\">\r\n            <div class=\"mat-elevation-z8\">\r\n                <table mat-table [dataSource]=\"dataSource\">\r\n              \r\n                  <!-- Position Column -->\r\n                  <ng-container matColumnDef=\"date\">\r\n                    <th mat-header-cell *matHeaderCellDef> Date </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\r\n                  </ng-container>\r\n              \r\n                  <!-- Weight Column -->\r\n                  <ng-container matColumnDef=\"value\">\r\n                    <th mat-header-cell *matHeaderCellDef> Value </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n                  </ng-container>\r\n              \r\n                  <!-- Symbol Column -->\r\n                  <ng-container matColumnDef=\"measurementUnit\">\r\n                    <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.measurementUnit}} </td>\r\n                  </ng-container>\r\n              \r\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                </table>\r\n              \r\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n              </div>\r\n              \r\n                    \r\n        </div>\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpService } from '../http.service';\r\nimport { Router } from '@angular/router';\r\nimport { SharedService } from '../shared.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  chart = [];\r\n  alert = \"\";\r\n  username = \"\";\r\n  password = \"\";\r\n  regexp;\r\n  regexp2;\r\n  times: any = [];\r\n  values: any = [];\r\n  timesLight: any = [];\r\n  valuesLight: any = [];\r\n  isLightMeasurement = false;\r\n  isTemperature = false;\r\n  hide = true\r\n  passwordInput \r\n\r\n  constructor(private fb: FormBuilder, private httpService: HttpService, private router: Router, private sharedService: SharedService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.validateForm = this.fb.group({\r\n      userName: [null, [Validators.required]],\r\n      password: [null, [Validators.required]],\r\n      remember: [true]\r\n    });\r\n  }\r\n\r\n  submitForm(): void {\r\n    for (const i in this.validateForm.controls) {\r\n      this.validateForm.controls[i].markAsDirty();\r\n      this.validateForm.controls[i].updateValueAndValidity();\r\n    }\r\n    // this.regexValidation(); \r\n    this.validation();\r\n    // this.sanitization(); \r\n  }\r\n\r\n  validation() {\r\n    if (this.username.trim().length == 0 || this.password.trim().length == 0) {\r\n      this.alert = \"Please provide username and password\";\r\n    } else {\r\n      this.makeHTTPCall()\r\n    }\r\n  }\r\n\r\n  makeHTTPCall() {\r\n    this.httpService.sendGetRequest(this.username, this.password)\r\n      .subscribe(res => {\r\n        if (res == null) {\r\n          this.alert = \"401 Unauthorized: Invalid Authentication Credentials\"\r\n        }\r\n        else {\r\n          this.sharedService.setLoggedIn(true);\r\n          this.extractData(res);\r\n        }\r\n      });\r\n  }\r\n\r\n  extractData(data) {\r\n\r\n    let measurementListLocal = []\r\n    let measurementsFromServer = data['measurements']\r\n    let counter = 0\r\n    let keepGoing = false\r\n\r\n    measurementsFromServer.forEach(element => {\r\n      if (!keepGoing) {\r\n        measurementListLocal.push(element)\r\n        \r\n        console.log(measurementListLocal[counter].type) //c8y_Serial, cro_c8y_LightMeasurement,c8y_TemperatureMeasurement\r\n\r\n        let type = measurementListLocal[counter].type\r\n        if (type === \"c8y_TemperatureMeasurement\" && this.values.length < 5) {\r\n          this.isTemperature = true;\r\n          let dateTime = data['measurements'][counter].time\r\n          let date = dateTime.split(\"T\", 2);\r\n          let time = date[1].split(\".\", 1)\r\n          this.times.push(date[0] + \" \" + time)\r\n          let T = measurementListLocal[counter].c8y_TemperatureMeasurement.T\r\n\r\n          JSON.parse(JSON.stringify(T), (key, value) => {\r\n            if (key === \"value\") {\r\n              this.values.push(value.toString())\r\n            }\r\n          });\r\n        }\r\n        if (measurementListLocal[counter].type === \"cro_c8y_LightMeasurement\" && this.valuesLight.length < 5) {\r\n          this.isLightMeasurement = true;\r\n          let times = \"2020-01-28\"\r\n                    + \" 11:\" + Math.floor((Math.random() * 60) + 1) + \":\" + Math.floor((Math.random() * 60) + 1)\r\n          this.timesLight.push(times)\r\n          let e = measurementListLocal[counter].c8y_LightMeasurement.e\r\n\r\n          JSON.parse(JSON.stringify(e), (key, value) => {\r\n            if (key === \"unit\") {\r\n            }\r\n            if (key === \"value\") {\r\n              this.valuesLight.push(value.toString())\r\n            }\r\n          });\r\n        }\r\n\r\n        counter++;\r\n      }//end if keepGoing\r\n\r\n    });\r\n    if (this.isTemperature && this.isLightMeasurement) {\r\n      this.sharedService.insertTemperatureData(new Map([[\"datesTemp\", this.times], [\"valuesTemp\", this.values]]))\r\n      this.sharedService.insertLightMeasurementData(new Map([[\"datesLight\", this.timesLight], [\"valuesLight\", this.valuesLight]]))\r\n\r\n      this.router.navigate(['/app/dashboard']);\r\n    } else {\r\n      keepGoing = true\r\n      this.makeHTTPCall()\r\n    }\r\n  }\r\n\r\n  // regexValidation(){\r\n  //     this.regexp = new RegExp('[^!@#$%^&*(){}:\"|/]')\r\n  //     this.regexp2 = new RegExp('[^/]io|[^@]cro ')\r\n  //     let test = this.regexp.test(this.username, this.password);\r\n  //     console.log(test); \r\n  // }\r\n}","<div class=\"container-login100\" style=\"background-image: url('../assets/img/bg-01.jpg');\">\r\n  <div class=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-54\">\r\n    <img class=\"logo\" src=\"../assets/img/RITIntelligence.svg\">\r\n    <!-- <h2 id=\"title\">RIT Intelligence</h2> -->\r\n    <div *ngIf=\"alert\" class=\"alert\">\r\n      <h2 id=\"alertText\">{{alert}}</h2>\r\n    </div>\r\n    <!-- <form nz-form [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\r\n    <nz-form-item>\r\n      <nz-form-control nzErrorTip=\"Please input your username!\">\r\n        <nz-input-group nzPrefixIcon=\"user\">\r\n          <input [(ngModel)]=\"username\" type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\" />\r\n        </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n        <nz-input-group nzPrefixIcon=\"lock\">\r\n          <input  [(ngModel)]=\"password\"type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" />\r\n        </nz-input-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-control>\r\n        <label nz-checkbox formControlName=\"remember\">\r\n          <span>Remember me</span>\r\n        </label>\r\n        <a class=\"login-form-forgot\" routerLink = \"dashboard\" class=\"login-form-forgot\">Forgot password</a>\r\n        <a routerLink = \"dashboard\"><button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Log in</button></a> \r\n        Or\r\n        <a class = \"register\">register now!</a>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form> -->\r\n    <form nz-form [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\r\n      <nz-form-item>\r\n        <nz-form-control nzErrorTip=\"Please input your username!\">\r\n          <nz-input-group nzPrefixIcon=\"user\">\r\n            <input [(ngModel)]=\"username\" formControlName=\"userName\" nz-input placeholder=\"Username\"\r\n              formControlName=\"userName\" type=\"text\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n\r\n      <nz-form-item>\r\n        <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n          <div class=\"passwordInput\">\r\n\r\n            <nz-input-group nzPrefixIcon=\"lock\">\r\n\r\n              <input class=\"inputFieldPassword\" [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"password\"\r\n                formControlName=\"password\" nz-input type=\"password\" placeholder=\"Password\" />\r\n              <mat-icon (click)=\"hide = !hide\">visibility</mat-icon>\r\n\r\n            </nz-input-group>\r\n          </div>\r\n\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n\r\n      <nz-form-item>\r\n        <nz-form-control>\r\n          <button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Log in</button>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n    </form>\r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SharedService {\r\n\r\n    private loggedIn: boolean = false;\r\n\r\n    private temperatureData = new BehaviorSubject<Map<string, string[]>>(new Map([[\"key1\", [\"value\"]], [\"key2\", [\"value\"]]]));\r\n    sharedMessage1 = this.temperatureData.asObservable();\r\n\r\n    private lightMeasurementData = new BehaviorSubject<Map<string, string[]>>(new Map([[\"key1\", [\"value\"]], [\"key2\", [\"value\"]]]));\r\n    sharedMessage2 = this.lightMeasurementData.asObservable();\r\n\r\n    constructor() { }\r\n\r\n    insertTemperatureData(message: Map<string,string[]>) {\r\n        this.temperatureData.next(message)\r\n    }\r\n\r\n    insertLightMeasurementData(message: Map<string,string[]>) {\r\n        this.lightMeasurementData.next(message)\r\n    }\r\n\r\n    isLoggedIn():boolean{\r\n        return this.loggedIn;\r\n    }\r\n\r\n    setLoggedIn(status){\r\n        this.loggedIn = status; \r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-divider> \r\n    \r\n</mat-divider>\r\n<footer>\r\n    &copy; All rights reserved 2020\r\n</footer>","import { Component, OnInit, Output } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { SharedService } from 'src/app/shared.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Output() openSidebarForMe: EventEmitter<any> = new EventEmitter()\r\n  constructor(private sharedService: SharedService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openSidebar() {\r\n    this.openSidebarForMe.emit();\r\n    setTimeout(()=>{\r\n      window.dispatchEvent(\r\n          new Event('resize')\r\n      );\r\n  }, 300)\r\n  }\r\n\r\n  signOut() {\r\n    this.sharedService.setLoggedIn(false);\r\n    this.router.navigate([\"/dominik\"]);\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row>\r\n        <button mat-icon-button (click) = \"openSidebar()\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n\r\n        <span> RIT Intelligence</span>\r\n        <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n            <ul fxLayout=\"row\" fxLayoutGap=\"20px\">\r\n                <li>\r\n                    <button mat-icon-button>\r\n                        <mat-icon>settings</mat-icon>\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button mat-icon-button>\r\n                        <mat-icon>help_outline</mat-icon>\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button mat-button [matMenuTriggerFor] = \"menu\"> \r\n                        <mat-icon> person_outline</mat-icon>\r\n                    </button>\r\n                    <mat-menu #menu = \"matMenu\">\r\n                        <button (click) = \"signOut()\"mat-menu-item>\r\n                                <mat-icon>exit_to_app</mat-icon>\r\n                                Sign out\r\n                        </button>\r\n                    </mat-menu>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-nav-list>\r\n    <div class = \"profile-card\">\r\n        <div class = \"header\"> \r\n            <h2> t5185958</h2>\r\n            <h4>t5185958/iot1@croatia.rit.edu</h4>\r\n        </div>\r\n     <img class = \"logo\" src = \"assets/img/RITIntelligence.svg\">\r\n    </div>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2 matSubheader>Measurements</h2>\r\n\r\n    <a class = \"dashboardText\"mat-list-item routerLinkActive = \"list-item-active\" routerLink = \"dashboard\">Temperature</a>\r\n    <a class = \"dashboardText\"mat-list-item routerLinkActive = \"list-item-active\" routerLink = \"light-measurement\">Light</a>\r\n    <mat-divider></mat-divider>\r\n    \r\n    <h2 matSubheader>Tools</h2>\r\n    <a class = \"dashboardText\"mat-list-item routerLinkActive = \"list-item-active\" routerLink = \"app/dashboard\">\r\n        <mat-icon>import_contacts</mat-icon>\r\n        Contacts\r\n        </a>\r\n\r\n</mat-nav-list>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { MatDividerModule, MatToolbarModule, MatIconModule, MatButtonModule, MatMenuModule, MatDivider, MatListModule, MatPaginatorModule, MatTableModule } from '@angular/material';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AreaComponent } from './widgets/area/area.component';\r\nimport { HighchartsChartModule } from 'highcharts-angular';\r\nimport { CardsComponent } from './widgets/cards/cards.component';\r\nimport { LightMeasurementComponent } from '../light-measurement/light-measurement.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SidebarComponent,\r\n    AreaComponent,\r\n    CardsComponent,\r\n    LightMeasurementComponent\r\n\r\n    \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatDividerModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    FlexLayoutModule,\r\n    MatMenuModule, \r\n    MatListModule,\r\n    RouterModule,\r\n    HighchartsChartModule,\r\n    MatPaginatorModule,\r\n    MatTableModule\r\n    \r\n\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SidebarComponent,\r\n    AreaComponent,\r\n    CardsComponent,\r\n\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Highcharts from 'highcharts';\r\nimport HC_exporting from 'highcharts/modules/exporting';\r\nimport { SharedService } from 'src/app/shared.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-widget-area',\r\n    templateUrl: './area.component.html',\r\n    styleUrls: ['./area.component.css']\r\n})\r\nexport class AreaComponent implements OnInit {\r\n\r\n    chartsOptions: {};\r\n    Highcharts = Highcharts;\r\n    constructor(private sharedService: SharedService) { }\r\n\r\n    ngOnInit() {\r\n        this.sharedService.sharedMessage1.subscribe(measurements => {\r\n            console.log('Widget', measurements);\r\n\r\n            this.chartsOptions = {\r\n                chart: {\r\n                    type: 'area'\r\n                },\r\n                title: {\r\n                    text: 'Some random data'\r\n                },\r\n                subtitle: {\r\n                    text: 'RIT Intelligence'\r\n                },\r\n                xAxis: {\r\n                    categories: measurements.get(\"datesTemp\"),\r\n                    tickmarkPlacement: 'on',\r\n                    title: {\r\n                        enabled: false\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Celsius'\r\n                    },\r\n                    labels: {\r\n                        formatter: function () {\r\n                            return Math.round(this.value).toFixed(1);\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    split: true,\r\n                    valueSuffix: ' degrees'\r\n                },\r\n                plotOptions: {\r\n                    area: {\r\n                        stacking: 'normal',\r\n                        lineColor: '#666666',\r\n                        lineWidth: 1,\r\n                        marker: {\r\n                            lineWidth: 1,\r\n                            lineColor: '#666666'\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Temperature',\r\n                    data: measurements.get(\"valuesTemp\").map(i=>Math.round(Number(i)* 10)/10),\r\n                }, \r\n                ]\r\n\r\n            };\r\n\r\n        })\r\n\r\n\r\n        HC_exporting(Highcharts);\r\n\r\n        setTimeout(() => {\r\n            window.dispatchEvent(\r\n                new Event('resize')\r\n            );\r\n        }, 300)\r\n        \r\n\r\n    }\r\n}\r\n","<highcharts-chart [Highcharts]=\"Highcharts\" [options]=\"chartsOptions\"\r\n    style=\"width: 100%; height: 400px; display: block;\"></highcharts-chart>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Highcharts from 'highcharts';\r\nimport HC_exporting from 'highcharts/modules/exporting';\r\n\r\n\r\n@Component({\r\n  selector: 'app-widget-cards',\r\n  templateUrl: './cards.component.html',\r\n  styleUrls: ['./cards.component.css']\r\n})\r\nexport class CardsComponent implements OnInit {\r\n\r\n  Highcharts = Highcharts; \r\n  chartsOptions = {}\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n \r\n    this.chartsOptions =  {\r\n      chart: {\r\n          type: 'area'\r\n      },\r\n      title: {\r\n          text: null\r\n      },\r\n      subtitle: {\r\n          text: null\r\n      },\r\n      xAxis: {\r\n          categories: ['1750', '1800', '1850', '1900', '1950', '1999', '2050'],\r\n          tickmarkPlacement: 'on',\r\n          title: {\r\n              enabled: false\r\n          }\r\n      },\r\n      yAxis: {\r\n          title: {\r\n              text: 'Billions'\r\n          },\r\n          labels: {\r\n              formatter: function () {\r\n                  return this.value / 1000;\r\n              }\r\n          }\r\n      },\r\n      tooltip: {\r\n          split: true,\r\n          valueSuffix: ' millions'\r\n      },\r\n     credits:{\r\n       enabled: false\r\n     },\r\n     exporting:{\r\n      enabled: false,\r\n     },\r\n      series: [{\r\n      data: [71, 78, 39, 66]\r\n      }]\r\n  \r\n  };\r\n\r\n  HC_exporting(Highcharts);\r\n\r\n  setTimeout(()=>{\r\n      window.dispatchEvent(\r\n          new Event('resize')\r\n      );\r\n  }, 300)\r\n  \r\n  }\r\n\r\n}\r\n","<highcharts-chart [Highcharts]=\"Highcharts\" [options]=\"chartsOptions\"\r\n    style=\"width: 100%; height: 400px; display: block;\"></highcharts-chart>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));"],"sourceRoot":"webpack:///"}